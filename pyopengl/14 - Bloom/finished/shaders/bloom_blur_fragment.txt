#version 330 core

in vec2 fragmentTexCoord;

layout (location = 0) out vec4 fragmentColor;

uniform sampler2D material;
uniform sampler2D bright_material;

const float offset = 1.0 / 160.0;
const vec2 offsets[9] = vec2[](
    vec2(-offset,  offset), // top-left
    vec2( 0.0f,    offset), // top-center
    vec2( offset,  offset), // top-right
    vec2(-offset,  0.0f),   // center-left
    vec2( 0.0f,    0.0f),   // center-center
    vec2( offset,  0.0f),   // center-right
    vec2(-offset, -offset), // bottom-left
    vec2( 0.0f,   -offset), // bottom-center
    vec2( offset, -offset)  // bottom-right    
);

const float gauss_blur_kernel[9] = float[](
    1.0 / 16.0, 2.0 / 16.0, 1.0 / 16.0,
    2.0 / 16.0, 4.0 / 16.0, 2.0 / 16.0,
    1.0 / 16.0, 2.0 / 16.0, 1.0 / 16.0
);

vec4 Blur() {

    vec3 color = vec3(0);

    for(int i = 0; i < 9; i++)
    {
        color += gauss_blur_kernel[i] * vec3(texture(bright_material, fragmentTexCoord.st + offsets[i]));
    }
    
    return vec4(color, 1.0);
}

void main() {
    fragmentColor = Blur();
}