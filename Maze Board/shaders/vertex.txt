# version 330

layout(location = 0) in vec3 a_position;
layout(location = 1) in vec2 a_texture;
layout(location = 2) in vec3 a_normal;

uniform mat4 model; //combined rotation and translation
uniform mat4 view;
uniform mat4 projection;

out vec2 v_texture;
out vec3 FragPos;
out vec3 Normal;

void main()
{
    gl_Position = projection * view * model * vec4(a_position, 1.0);
    v_texture = vec2(a_texture.s, 1 - a_texture.t);
    Normal = mat3(model) * a_normal;
    FragPos = vec3(model*vec4(a_position,1.0));
}