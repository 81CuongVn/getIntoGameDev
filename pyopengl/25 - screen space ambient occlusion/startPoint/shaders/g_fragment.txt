#version 330 core
#extension GL_ARB_separate_shader_objects : enable

struct Material {
    sampler2D albedo;
    sampler2D ao;
    sampler2D normal;
    sampler2D specular;
};

layout (location=0) in vec3 fragmentPos;
layout (location=1) in vec2 fragmentTexCoord;
layout (location=2) in mat3 TBN;

uniform Material material;

layout (location = 0) out vec3 gPosition;
layout (location = 1) out vec4 gAlbedoSpecular;
layout (location = 2) out vec4 gNormalAo;


void main()
{
    gPosition = fragmentPos;
    gAlbedoSpecular.rgb = texture(material.albedo, fragmentTexCoord).rgb;
    gAlbedoSpecular.a = texture(material.specular, fragmentTexCoord).r;

    // -1 to 1
    vec3 normal = normalize(TBN * (2.0 * texture(material.normal, fragmentTexCoord).rgb - vec3(1.0)));
    // 0 to 1
    gNormalAo.rgb = (normal + vec3(1.0)) / 2.0;
    gNormalAo.a = texture(material.ao, fragmentTexCoord).r;
}